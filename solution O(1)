/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class BSTIterator {
    private:
    TreeNode* ptr ;
    queue <TreeNode*> q ;
    void push_queue ( TreeNode* root )
    {
        if ( root == NULL ) return ;
        push_queue( root -> left ) ;
        q.push(root) ;
        push_queue( root -> right );
    }
public:
    BSTIterator(TreeNode* root) {
        push_queue( root ) ;
        ptr = NULL ;
    }
    
    int next() {
        ptr = q.front() ;
        q.pop() ;
        return ptr -> val ;
    }
    
    bool hasNext() {
        return !q.empty() ;
    }
};

/**
 * Your BSTIterator object will be instantiated and called as such:
 * BSTIterator* obj = new BSTIterator(root);
 * int param_1 = obj->next();
 * bool param_2 = obj->hasNext();
 */
